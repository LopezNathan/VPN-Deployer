---
- name: OpenVPN Install
  hosts: "{{ NAME }}"
  remote_user: root

  vars:
    IP: "{{ IP }}"
    EMAIL: "{{ EMAIL }}"

  tasks:

  # Temporary fix to prevent playbook failing due to existing apt processes.
  # Open issue: https://github.com/ansible/ansible/issues/51663 & https://github.com/ansible/ansible/issues/25414
  - name: Wait for Automatic System Updates
    become: true
    shell: while sudo fuser /var/lib/dpkg/{{ item }} >/dev/null 2>&1; do sleep 1; done;
    with_items:
      - lock
      - lock-frontend

  # - name: Ensure YUM Packages are Latest Version
  #   yum:
  #     name: "*"
  #     state: latest
  #   when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

  # - name: Ensure APT Packages are Latest Version
  #   apt:
  #     name: "*"
  #     state: latest
  #   when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

  - name: Ensure EPEL is Present
    yum:
      name: epel-release
      state: present
    register: yum_status
    until: yum_status is success
    delay: 10
    retries: 5
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

  - name: Ensure NGINX is Present
    package:
      name: nginx
      state: present
    register: package_status
    until: package_status is success
    delay: 5
    retries: 5

  - name: Ensure NGINX is Started
    service:
      name: nginx
      state: started

  - name: Ensure Sendmail is Present (if EMAIL Variable provided)
    package:
      name: sendmail
      state: present
    when: EMAIL != "None"

  - name: Ensure Sendmail is Started (if EMAIL Variable provided)
    service:
      name: sendmail
      state: started
    when: EMAIL != "None"
  
  - name: Add Email Content
    shell: IP=$(hostname -I | cut -d' ' -f1); echo -e 'Subject:'' VPN Client Download'"\n"'Download Link:'" http://$IP/client.ovpn" > /root/email.txt
    when: EMAIL != "None"

  - name: Ensure IPTables is Present
    package:
      name: iptables
      state: present

  - name: Ensure Client IP is Accepted
    iptables:
      chain: INPUT
      protocol: tcp
      destination_port: 80
      source: "{{ IP }}"
      jump: ACCEPT
    become: yes

  - name: Drop All Unknown IPs
    iptables:
      chain: INPUT
      protocol: tcp
      destination_port: 80
      jump: DROP
    become: yes

  - name: Check if OpenVPN Exists
    stat: 
      path: /usr/sbin/openvpn
    register: openvpn_status

  - name: Copy OpenVPN Installer
    copy:
      src: ./install_openvpn.sh
      dest: /root/install_openvpn.sh
      mode: 0755
    when: openvpn_status.stat.exists == False

  - name: Run OpenVPN Installer
    environment:
      AUTO_INSTALL: y
      CONTINUE: y
    shell: /root/install_openvpn.sh
    when: openvpn_status.stat.exists == False

  - name: Copy OpenVPN Config to NGINX Path
    copy:
      src: /root/client.ovpn
      dest: /usr/share/nginx/html/client.ovpn
      remote_src: yes
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

  - name: Copy OpenVPN Config to NGINX Path
    copy:
      src: /root/client.ovpn
      dest: /var/www/html/client.ovpn
      remote_src: yes
    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
    
  - name: Send Email About File Download
    shell: sendmail "{{ EMAIL }}" < /root/email.txt
    when: EMAIL != "None"